#!/bin/bash
set -eo pipefail

if [[ -n "${ELASTICSEARCH_MAX_MAP_COUNT}" ]]
then
  echo "Enforcing max mapcount..."
  sysctl -w vm.max_map_count=${ELASTICSEARCH_MAX_MAP_COUNT}
fi

if [[ -n "${ELASTICSEARCH_MAX_FD}" ]]
then
  echo "Enforcing open filedescriptors..."
  ulimit -n ${ELASTICSEARCH_MAX_FD}
fi

if [[ ! -d ${ELASTICSEARCH_CONFIG_DIR} ]]
then
  echo "Creating config directory..."
  mkdir -p ${ELASTICSEARCH_CONFIG_DIR}
fi

if [[ ! -d ${ELASTICSEARCH_DATA_DIR} ]]
then
  echo "Creating data directory..."
  mkdir -p ${ELASTICSEARCH_DATA_DIR}
fi

if [[ ! -d ${ELASTICSEARCH_LOGS_DIR} ]]
then
  echo "Creating logs directory..."
  mkdir -p ${ELASTICSEARCH_LOGS_DIR}
fi

if [[ ! -d ${ELASTICSEARCH_PLUGINS_DIR} ]]
then
  echo "Creating plugins directory..."
  mkdir -p ${ELASTICSEARCH_PLUGINS_DIR}
fi

if [[ ! -d ${ELASTICSEARCH_SCRIPTS_DIR} ]]
then
  echo "Creating scripts directory..."
  mkdir -p ${ELASTICSEARCH_SCRIPTS_DIR}
fi

if [[ ! -d ${ELASTICSEARCH_WORK_DIR} ]]
then
  echo "Creating work directory..."
  mkdir -p ${ELASTICSEARCH_WORK_DIR}
fi

if [[ ${ELASTICSEARCH_SKIP_CHOWN} == "true" ]]
then
  echo "Skipping data chown..."
else
  echo "Fixing base permissions..."
  find ${ELASTICSEARCH_BASE_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico

  if [[ ! ${ELASTICSEARCH_CONFIG_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing config permissions..."
    find ${ELASTICSEARCH_CONFIG_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi

  if [[ ! ${ELASTICSEARCH_DATA_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing data permissions..."
    find ${ELASTICSEARCH_DATA_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi

  if [[ ! ${ELASTICSEARCH_LOGS_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing logs permissions..."
    find ${ELASTICSEARCH_LOGS_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi

  if [[ ! ${ELASTICSEARCH_PLUGINS_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing plugins permissions..."
    find ${ELASTICSEARCH_PLUGINS_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi

  if [[ ! ${ELASTICSEARCH_SCRIPTS_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing scripts permissions..."
    find ${ELASTICSEARCH_SCRIPTS_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi

  if [[ ! ${ELASTICSEARCH_WORK_DIR} =~ ^${ELASTICSEARCH_BASE_DIR} ]]
  then
    echo "Fixing scripts permissions..."
    find ${ELASTICSEARCH_WORK_DIR} \( \! -user elastico -o \! -group elastico \) -print0 | xargs -r -0 chown elastico:elastico
  fi
fi

for VAL in $(echo ${ELASTICSEARCH_PLUGINS_INSTALL} | tr "," " ")
do
  if [[ -d "${ELASTICSEARCH_PLUGINS_DIR}/${VAL}" ]]
  then
    echo "Skipping ${VAL} install, directory does exist..."
  else
    elasticsearch-plugin install -b ${VAL}
  fi
done

for VAL in $(echo ${ELASTICSEARCH_PLUGINS_UNINSTALL} | tr "," " ")
do
  if [[ -d "${ELASTICSEARCH_PLUGINS_DIR}/${VAL}" ]]
  then
    echo "Skipping ${VAL} uninstall, directory doesn't exist..."
  else
    elasticsearch-plugin remove -p ${VAL}
  fi
done
